(function(e,r){if(e.Ember){var n=e.Ember.RSVP;if(typeof exports==="object"){module.exports=r(require("ramda-extended"),n)}else if(typeof define==="function"&&define.amd){define("get-rsvp",function(){return n});define(["ramda-extended","get-rsvp"],r)}else{e.R=r(e.R,n)}}else{if(typeof exports==="object"){console.log("requiring");module.exports=r(require("ramda-extended"),require("rsvp"))}else if(typeof define==="function"&&define.amd){define(["ramda-extended","rsvp"],r)}else{e.R=r(e.R,e.RSVP)}}})(this,function e(r,n){var t={RSVP:n};r.rsvp=t;t.compose=r.composeP;t.pipe=r.pipeP;t.parallel=r.curryN(2,function o(e,n){return t.all(r.juxt(e))(n)});t.parallelHash=r.curryN(2,function u(e,t){return r.compose(n.hash,r.mapObj(function(e){return e(t)}))(e)});t.promise=function i(e){return function(){var n=arguments;return new t.RSVP.Promise(function(t,o){try{var u=r.apply(e,n)}catch(i){console.log("Rejecting:",n);o(i)}t(u)})}};t.all=r.curryN(1,function c(e){return r.compose(n.all,e)});t.hash=r.curryN(1,function a(e){return r.compose(n.hash,e)});t.map=r.curryN(2,function f(e,n){return t.all(r.map(e))(n)});t.filter=r.curryN(2,function l(e,n){return t.all(r.filter(e))(n)});t.effect=r.curryN(2,function p(e,n){return e(n).then(r.always(n))});t.log=t.promise(r.log);t.trace=function(e){return t.promise(r.trace(e))};return r});
